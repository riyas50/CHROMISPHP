-- /*
-- =============================================================================================================
-- ALL SALES TILL DATE
SELECT PRODUCTS.REFERENCE, 
       PRODUCTS.NAME, 
       PRODUCTS.PRICEBUY, 
       PRODUCTS.PRICESELL, 
       SUM(TICKETLINES.UNITS) AS SOLD_UNITS, 
       SUM(TICKETLINES.UNITS * PRODUCTS.PRICEBUY) AS COST_VALUE, 
       SUM(TICKETLINES.UNITS * PRODUCTS.PRICESELL) AS EXPECTED_SALES_VALUE, 
       SUM(TICKETLINES.PRICE * TICKETLINES.UNITS) AS ACTUAL_SALES_VALUE, 
         SUM(TICKETLINES.UNITS * PRODUCTS.PRICESELL) 
       - SUM(TICKETLINES.UNITS * PRODUCTS.PRICEBUY) 
          AS EXPECTED_PROFIT, 
       SUM(TICKETLINES.PRICE * TICKETLINES.UNITS) - SUM(TICKETLINES.UNITS * PRODUCTS.PRICEBUY) 
          AS ACTUAL_PROFIT 
  FROM (TICKETLINES TICKETLINES 
       INNER JOIN RECEIPTS RECEIPTS 
           ON (TICKETLINES.TICKET = RECEIPTS.ID)) 
       LEFT OUTER JOIN PRODUCTS PRODUCTS 
          ON (TICKETLINES.PRODUCT = PRODUCTS.ID) 
    GROUP BY TICKETLINES.PRODUCT 
    ORDER BY PRODUCTS.REFERENCE ASC;
-- WHERE ?(QBF_FILTER) 
 -- */
-- =============================================================================================================
-- Date field added
SELECT PRODUCTS.REFERENCE, 
       PRODUCTS.NAME,
       DATE_FORMAT(STOCKDIARY.DATENEW,"%d-%m-%Y") AS TDATE, 
       DATE_FORMAT(STOCKDIARY.DATENEW,"%h:%i:%s %p") AS TTIME,
       PRODUCTS.PRICEBUY, 
       PRODUCTS.PRICESELL, 
       SUM(TICKETLINES.UNITS) AS SOLD_UNITS, 
       SUM(TICKETLINES.UNITS * PRODUCTS.PRICEBUY) AS COST_VALUE, 
       SUM(TICKETLINES.UNITS * PRODUCTS.PRICESELL) AS EXPECTED_SALES_VALUE, 
       SUM(TICKETLINES.PRICE * TICKETLINES.UNITS) AS ACTUAL_SALES_VALUE, 
         SUM(TICKETLINES.UNITS * PRODUCTS.PRICESELL) 
       - SUM(TICKETLINES.UNITS * PRODUCTS.PRICEBUY) 
          AS EXPECTED_PROFIT, 
       SUM(TICKETLINES.PRICE * TICKETLINES.UNITS) - SUM(TICKETLINES.UNITS * PRODUCTS.PRICEBUY) 
          AS ACTUAL_PROFIT 
  FROM (TICKETLINES TICKETLINES 
       INNER JOIN RECEIPTS RECEIPTS 
           ON (TICKETLINES.TICKET = RECEIPTS.ID)) 
       LEFT OUTER JOIN PRODUCTS PRODUCTS 
          ON (TICKETLINES.PRODUCT = PRODUCTS.ID) 
       RIGHT JOIN STOCKDIARY STOCKDIARY
          ON (STOCKDIARY.PRODUCT=PRODUCTS.ID)
    WHERE STOCKDIARY.DATENEW >= '14/07/2017' AND STOCKDIARY.DATENEW < '15/07/2017'
    GROUP BY TICKETLINES.PRODUCT,DATE_FORMAT(STOCKDIARY.DATENEW,"%d-%m-%Y") 
    ORDER BY PRODUCTS.REFERENCE ASC;    
-- WHERE ? (QBF_FILTER) 
    -- WHERE DATE_FORMAT(STOCKDIARY.DATENEW,%d-%m-%Y") = '14-07-2017'
-- =============================================================================================================